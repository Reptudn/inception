# version: '3.8'

networks:
  inception_network:

# TODO: uncomment driver_opts to use bind mount when in a vm with that file structure
volumes:
  db:
    driver: local
    # driver_opts:
    #   type: none
    #   device: /home/${USER}/data
    #   o: bind
  wordpress:
    driver: local
    # driver_opts:
    #   type: none
    #   device: /home/${USER}/data
    #   o: bind

services:
  mariadb:
    container_name: mariadb
    restart: always
    networks:
      - inception_network
    volumes:
      - db:/var/lib/mysql
    build:
      context: './requirements/mariadb'
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - MARIA_DB_ROOT_USER=${MARIA_DB_ROOT_USER}
      - MARIA_DB_ROOT_PASSWORD=${MARIA_DB_ROOT_PASSWORD}
      - MARIA_DB_DATABASE_NAME=${MARIA_DB_DATABASE_NAME}
  nginx:
    container_name: nginx
    restart: always
    networks:
      - inception_network
    volumes:
      - wordpress:/var/www/html
    build:
      context: './requirements/nginx'
      dockerfile: Dockerfile
    ports:
      - "443:443" # host-port:docker-port
    depends_on:
      - wordpress
  wordpress:
    container_name: wordpress
    restart: always
    networks:
      - inception_network
    volumes:
      - wordpress:/var/www/html
    build:
      context: './requirements/wordpress'
      dockerfile: Dockerfile
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - MARIA_DB_ROOT_USER=${MARIA_DB_ROOT_USER}
      - MARIA_DB_ROOT_PASSWORD=${MARIA_DB_ROOT_PASSWORD}
      - MARIA_DB_DATABASE_NAME=${MARIA_DB_DATABASE_NAME}
      - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
      - WORDPRESS_TEST_USER=${WORDPRESS_TEST_USER}
      - WORDPRESS_TEST_USER_PASSWORD=${WORDPRESS_TEST_USER_PASSWORD}
      - WORDPRESS_TEST_USER_EMAIL=${WORDPRESS_TEST_USER_EMAIL}
  redis:
    restart: always
    container_name: redis
    networks:
      - inception_network
    build:
      context: './requirements/bonus/redis'
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  ftp:
    container_name: ftp
    restart: always
    networks:
      - inception_network
    volumes:
      - wordpress:/var/www/html
    build:
      context: './requirements/bonus/ftp'
      dockerfile: Dockerfile
    environment:
      - FTP_USER=${FTP_USER}
      - FTP_PASSWORD=${FTP_PASSWORD}
    ports:
      - "21:21"
      - "40000-40100:40000-40100"
    depends_on:
      mariadb:
        condition: service_healthy
      nginx:
        condition: service_started
  adminer:
    container_name: adminer
    restart: always
    build:
      context: './requirements/bonus/adminer'
      dockerfile: Dockerfile
    networks:
      - inception_network
    ports:
      - "8080:8080"
    depends_on:
      mariadb:
        condition: service_healthy
  custom_page:
    container_name: custom_page
    restart: always
    networks:
      - inception_network
    build:
      context: './requirements/bonus/custom_page'
      dockerfile: Dockerfile
    ports:
      - "4242:4242"
  cadvisor:
    restart: always
    platform: linux/amd64
    build:
      context: './requirements/bonus/cadvisor'
      dockerfile: Dockerfile
    container_name: cadvisor
    ports:
      - "7070:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    privileged: true